//$file${.::AO_ButtonBlink.hpp} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: ButtonBlink.qm
// File:  ${.::AO_ButtonBlink.hpp}
//
// This code has been generated by QM 5.3.0 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::AO_ButtonBlink.hpp} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef AO_BLINKBUTTON_H
#define AO_BLINKBUTTON_H
#include "LedHandler.hpp"
#include "qpcpp.hpp" // QP/C++ framework API
#include "Signals.hpp"
#include "BSP_QP.hpp"

///@brief init struct for button blink AO
typedef struct ButtonBlinkInit_t
{
    APP::LedHandler* ledHandler;
}ButtonBlinkInit_t;
// ask QM to declare the Blinky class ----------------------------------------
//$declare${AOs::ButtonBlink} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AOs::ButtonBlink} ........................................................
class ButtonBlink : public QP::QActive {
private:
    QP::QTimeEvt m_timeEvt;
    APP::LedHandler* ledHandler;
    ButtonBlinkInit_t init;

public:
    ButtonBlink(ButtonBlinkInit_t& _init);

protected:
    Q_STATE_DECL(initial);
    Q_STATE_DECL(off);
    Q_STATE_DECL(on);
}; // class ButtonBlink
//$enddecl${AOs::ButtonBlink} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


#endif // BSP_HPP
